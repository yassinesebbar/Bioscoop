// <auto-generated />
using System;
using Bioscoop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bioscoop.Migrations
{
    [DbContext(typeof(BioscoopContext))]
    partial class BioscoopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Bioscoop.Models.Event", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<int?>("HallID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDhall")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDmovie")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("HallID");

                    b.HasIndex("MovieID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Bioscoop.Models.Hall", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rows")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeatsPerRow")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Halls");
                });

            modelBuilder.Entity("Bioscoop.Models.Movie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cast")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("DurationMin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageCover")
                        .HasColumnType("TEXT");

                    b.Property<string>("RatingGuide")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("director")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Bioscoop.Models.Event", b =>
                {
                    b.HasOne("Bioscoop.Models.Hall", "Hall")
                        .WithMany()
                        .HasForeignKey("HallID");

                    b.HasOne("Bioscoop.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieID");

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });
#pragma warning restore 612, 618
        }
    }
}
