// <auto-generated />
using System;
using Bioscoop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bioscoop.Migrations
{
    [DbContext(typeof(BioscoopContext))]
    [Migration("20210322201656_migration6")]
    partial class migration6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Bioscoop.Models.Chair", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChairNr")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FKIDEventAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FKIDEventReserverd")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FKIDHall")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FKIDReservation")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("FKIDEventAvailable");

                    b.HasIndex("FKIDEventReserverd");

                    b.HasIndex("FKIDHall");

                    b.ToTable("Chairs");
                });

            modelBuilder.Entity("Bioscoop.Models.Event", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("BasePrijs")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<int?>("HallID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDhall")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDmovie")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("HallID");

                    b.HasIndex("MovieID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Bioscoop.Models.FinanceTransaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTimeTransaction")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DiscountID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ExtraTarif")
                        .HasColumnType("REAL");

                    b.Property<int>("IDdiscount")
                        .HasColumnType("INTEGER");

                    b.Property<double>("basePrice")
                        .HasColumnType("REAL");

                    b.Property<string>("descriptionExtraTarif")
                        .HasColumnType("TEXT");

                    b.Property<double>("discount")
                        .HasColumnType("REAL");

                    b.Property<bool>("paymentIsComplete")
                        .HasColumnType("INTEGER");

                    b.Property<double>("totalPrice")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("DiscountID");

                    b.ToTable("FinanceTransactions");
                });

            modelBuilder.Entity("Bioscoop.Models.Hall", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumSeats")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rows")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeatsPerRow")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Halls");
                });

            modelBuilder.Entity("Bioscoop.Models.Movie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cast")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("DurationMin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageCover")
                        .HasColumnType("TEXT");

                    b.Property<string>("RatingGuide")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ThreeD")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("director")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Bioscoop.Models.Payment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<string>("Banknr")
                        .HasColumnType("TEXT");

                    b.Property<string>("CouponCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("paymentMethod")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("reservationID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("reservationID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Bioscoop.Models.Reservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EventID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FKIDReservation")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FinanceTransactionID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDdiscount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDevent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDtransaction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("geanuleerd")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("EventID");

                    b.HasIndex("FKIDReservation");

                    b.HasIndex("FinanceTransactionID");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Bioscoop.Models.TicketDiscount", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<double>("discountAmount")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("TicketDiscounts");
                });

            modelBuilder.Entity("Bioscoop.Models.Chair", b =>
                {
                    b.HasOne("Bioscoop.Models.Event", null)
                        .WithMany("AvailableSeats")
                        .HasForeignKey("FKIDEventAvailable");

                    b.HasOne("Bioscoop.Models.Event", null)
                        .WithMany("ReservedSeats")
                        .HasForeignKey("FKIDEventReserverd");

                    b.HasOne("Bioscoop.Models.Hall", null)
                        .WithMany("Seats")
                        .HasForeignKey("FKIDHall");
                });

            modelBuilder.Entity("Bioscoop.Models.Event", b =>
                {
                    b.HasOne("Bioscoop.Models.Hall", "Hall")
                        .WithMany()
                        .HasForeignKey("HallID");

                    b.HasOne("Bioscoop.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieID");

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Bioscoop.Models.FinanceTransaction", b =>
                {
                    b.HasOne("Bioscoop.Models.TicketDiscount", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountID");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("Bioscoop.Models.Payment", b =>
                {
                    b.HasOne("Bioscoop.Models.Reservation", "reservation")
                        .WithMany()
                        .HasForeignKey("reservationID");

                    b.Navigation("reservation");
                });

            modelBuilder.Entity("Bioscoop.Models.Reservation", b =>
                {
                    b.HasOne("Bioscoop.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventID");

                    b.HasOne("Bioscoop.Models.Chair", "StoelNr")
                        .WithMany()
                        .HasForeignKey("FKIDReservation");

                    b.HasOne("Bioscoop.Models.FinanceTransaction", "FinanceTransaction")
                        .WithMany()
                        .HasForeignKey("FinanceTransactionID");

                    b.Navigation("Event");

                    b.Navigation("FinanceTransaction");

                    b.Navigation("StoelNr");
                });

            modelBuilder.Entity("Bioscoop.Models.Event", b =>
                {
                    b.Navigation("AvailableSeats");

                    b.Navigation("ReservedSeats");
                });

            modelBuilder.Entity("Bioscoop.Models.Hall", b =>
                {
                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
